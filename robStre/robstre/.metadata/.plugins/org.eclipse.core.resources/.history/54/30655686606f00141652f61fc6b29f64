package main;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;




public class RHPbuild {
	
	FileWriter fstream; // =new FileWriter("", true);
	BufferedWriter out; // = new BufferedWriter(fstream);

	
	Random rnd = new Random();
	

	public RHPbuild()
	{
		
		try {
			fstream = new FileWriter("rhp-vectors.txt", false);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return;
	}
	public void produce(int l, int k, int d) // l: # of hash tables; k: dimension of each bitmap; d: dimension of original vector
	{
		
		fstream = new FileWriter("naiveRes.txt", true);
		BufferedWriter out = new BufferedWriter(fstream);

		out.write("Timestamp  " + Double.toString(curtstamp) + ", "
				+ "total num  " + Integer.toString(pairHset.size())
				+ ": \n ");

		int len = pairHset.size();

		for (String iter : pairHset) {
			out.write(iter + "\n");
		}

		System.out.printf("timestamp %f  %d\n", curtstamp, pairHset.size());

		out.write("\n");
		out.close();
		
		
		
		for(int i=0;i<l;++i)
		{
			for(int j=0;j<k;++j)
			{
				for(int m=0;m<d;++m)
				{
					rnd.nextGaussian()
				}
			}
		}
		return;
	}
	
	

}

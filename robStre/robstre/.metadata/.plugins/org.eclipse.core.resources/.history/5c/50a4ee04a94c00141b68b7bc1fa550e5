import java.io.IOException;

import backtype.storm.generated.AlreadyAliveException;
import backtype.storm.generated.InvalidTopologyException;
import backtype.storm.topology.BasicOutputCollector;
import backtype.storm.tuple.Values;


public class coorGenerationTest {
	
	
	
	calCellCoor( int dftNum,int curCnt, String cellCoor,
			) {

		if(curCnt>=dftNum)
		{
			
			if(cellCoor.compareTo(hostCoor)==0)
			{
				collector.emit("streamData",new Values(ts, streid[memidx],
						cellCoor, strevec, 1));
			}
			else
			{
				collector.emit("streamData",new Values(ts, streid[memidx],
						cellCoor, strevec, 0));
			}
			
			return;
			
		}
		for(int i=0;i<3;++i)
		{
			cellCoor=cellCoor+ Integer.toString( dftCell[memidx][curCnt]+i )+",";
			
			calCellCoor( memidx,  dftNum, curCnt+1, cellCoor,
					 collector, strevec, hostCoor,ts);
		
		}
	
		return;
	}

	
	public static void main(String[] args) throws InterruptedException,
	IOException, AlreadyAliveException, InvalidTopologyException {
	}
	}
	

}
